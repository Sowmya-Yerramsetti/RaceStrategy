return time to recharge battery while coasting

recharge_rate * time = (upper_capacity - current_capacity) + energy used

{recharge_rate-(1/3600) * coasting_velocity * ((mass * gravity * rolling_resistance) +
                (0.0386 * air_density * drag_coefficient * cross_area * velocity ** 2) + # 0.0386 for km/h
                (mass * acceleration))}*time 
                =
                (upper_capacity - current_capacity)
                
time = (upper_capacity - current_capacity) / {recharge_rate-(1/3600) * coasting_velocity * ((mass * gravity * rolling_resistance) +
                (0.0386 * air_density * drag_coefficient * cross_area * velocity ** 2) + 0.0386 for km/h
                (mass * acceleration))}
                
def calc_recharge_time(recharge_rate, coasting_velocity, current_capacity):
    upper_battery_capacity = 4.0 # KWh, point when to swap back to battery power

    time = 0
    
    gained_energy = recharge_rate * time # KWh 
    energy_used = (1/3600) * time*coasting_velocity * ((mass * gravity * rolling_resistance) +
                (0.0386 * air_density * drag_coefficient * cross_area * velocity ** 2) + # 0.0386 for km/h
                (mass * acceleration))